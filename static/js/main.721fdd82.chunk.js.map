{"version":3,"sources":["keyboard.tsx","App.tsx","index.tsx"],"names":["Keyboard","state","key","keySaver","event","setState","document","addEventListener","this","removeEventListener","Component","App","className","ReactDOM","render","getElementById"],"mappings":"oMAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,YAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,YAV/C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACEA,EAAG,mCAC6BA,EAD7B,KAEC,8BAvBV,GAA8BQ,a,OCHjBC,EAAgB,kBAC3B,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA4B,cAAC,EAAD,S,MCAhCC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.721fdd82.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  key: string,\n};\n\nexport class Keyboard extends Component<{}, State> {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keySaver);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keySaver);\n  }\n\n  keySaver = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render(): ReactNode {\n    const { key } = this.state;\n\n    return (\n      key\n        ? `The last pressed key is [${key}]`\n        : 'Nothing was pressed yet'\n    );\n  }\n}\n","import React from 'react';\nimport { Keyboard } from './keyboard';\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <p className=\"App__message\"><Keyboard /></p>\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}